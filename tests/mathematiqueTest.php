<?php

use PHPUnit\Framework\TestCase;

class mathematiqueTest extends TestCase {

    private mathematique $math;

    protected function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->math = new mathematique();
    }

    public static function setupBeforeClass(): void {
        parent::setupBeforeClass(); // TODO: Change the autogenerated stub
    }

    protected function tearDown(): void {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    /**
     * @dataProvider additionProvider
     */
    public function testAddtion(int $nb1, int $nb2, int $expected) {

        $actual = $this->math->addtion($nb1, $nb2);

        $this->assertEquals($expected, $actual);
    }

    /**
     * @dataProvider divisionProvider
     * @throws Exception
     */
   /* public function testDivision(int $nb1, int $nb2, int $expected) {
        try{
            $actual = $this->math->division($nb1, $nb2);
        }
        catch(DivisionByZeroError $e){
            die();
        }

        $this->assertEquals($expected, $actual);
    } */

    public function additionProvider() {
        return[
            [10,20,30],
            [0,0,0],
            [1,1,2],
            [1,-1,0],
            [-1,1,0],
            [-1,-1,-2]
        ];
    }

    public function divisionProvider() {
        return[
            [10,5,2],
            [5,0,1],
            [1,1,1],
            [1,-1,-1],
            [-1,1,-1],
            [-1,-1,1]
        ];
    }
}
